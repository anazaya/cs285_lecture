import numpy as np
x_1 = np.array([1,2,3])
x_2 = np.array([[4,5,6],[7,8,9]])
x_3 = np.random.rand(2,3,4)
#print(f"{x_1}'s shape : {x_1.shape}")
#print(f"{x_2}'s shape : {x_2.shape}")
#print(f"{x_3}'s shape : {x_3.shape}")

#print(x_2[:, np.newaxis, :].shape)
#print(x_2[np.newaxis, ...].shape)
#print(x_3[None, ...].shape)

#print(f"x_2's 2nd row : {x_2[1]}")
#print(f"x_3's 2nd dimension's 2nd to 3rd row : {x_3[1,1:3]}")

#print(f"{np.sum(x_2)}")
#print(f"{np.sum(x_2, axis = (0,1))}")
#print(x_1)
x_1_reshaped = x_1.reshape(-1,1)
x_2_reshaped = x_2.reshape(-1,1)
#print(x_1_reshaped.shape)
#print(x_1_reshaped)
#print(x_2_reshaped.shape)

y = np.random.randint(10, size = (2,4,1,3,1,2))
y_squeezed1 = y.squeeze()
y_squeezed2 = y.squeeze(2)
#print(y_squeezed1.shape)
#print(y_squeezed2.shape)

row_vec = np.random.randint(10, size = (5,))
col_vec = np.random.randint(10, size = (5,1))
#print(row_vec)
#print(col_vec)
#print(row_vec * col_vec)
#print(row_vec @ col_vec)
#print((row_vec @ col_vec).squeeze())
#print(row_vec * col_vec.squeeze())

z = np.random.randint(5, size = (2,3,4))
#print(z.shape)
z_transposed = z.transpose((1,0,2))
#print(z_transposed.shape)